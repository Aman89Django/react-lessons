{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","profile","className","s","main_background","src","photos","large","aboutMe","name","PreLoader","Post","item","alt","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postElements","posts","map","p","likesCount","post","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","update","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.c7a77873.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_background\":\"ProfileInfo_main_background__fGKF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if(prevProps.status !== this.props.status) {\n    //         this.setState({\n    //             status: this.props.status\n    //         })\n    //     }\n    // }\n\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\n    return <div>\n        Status:\n        {!editMode ?\n            <div><span onDoubleClick={activateEditMode}>{status || 'NO status'}</span></div>\n            : <div><input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/></div>}\n    </div>\n\n\n};\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport PreLoader from \"../../Common/Preloader/PreLoader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if(!profile) {\n        return <PreLoader />\n    }\n    return (\n        <div>\n            <div className={s.main_background}>\n\n            </div>\n            <div>\n                <img src={profile.photos.large}/>\n\n                <div>About me: {profile.aboutMe}</div>\n                <div>Name: {profile.name}</div>\n\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n\n\n    return(\n    <div className={s.item}>\n        <img src=\"https://www.trendsmap.com/ipx/https://pbs.twimg.com/profile_images/926488420645523456/hwKSfqNj.jpg\" alt=\"avatar\"/>\n\n        {props.message}\n        <div className={s.like}>Like: <span>{props.like}</span></div>\n        \n    </div>\n    )\n}\n\n\n\n\nexport default Post;\n\n\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo(props => {\n    console.log('RENDER');\n    const postElements =\n        props.posts.map(p => <Post like={p.likesCount} message={p.post}/>);\n\n    const onAddPost = values=> {\n        props.addPost(values.post);\n    };\n\n\n    return (\n        <div>\n            <div className={s.postsBlock}>\n                <h3>My posts</h3>\n                <div>\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\n                </div>\n            </div>\n\n            <div className={s.posts}>\n                {postElements}\n            </div>\n\n        </div>\n    )\n});\n\n\n\nconst AddNewPostForm = props => {\n    return (\n            <form onSubmit={props.handleSubmit}>\n                <div><Field name=\"post\" component={Textarea} placeholder=\"add a new post\" validate={[required, maxLength10]}/></div>\n                <div>\n                    <button>Add post</button>\n                </div>\n            </form>\n    )\n};\n\nconst AddNewPostFormRedux= reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\n\nexport default MyPosts;\n\n\n\n\n\n\n\n//\n// import React from 'react';\n// import s from './MyPosts.module.css';\n// import Post from \"./Post/Post\";\n//\n//\n// const MyPosts = (props) => {\n//     const postElements =\n//         props.posts.map(p => <Post like={p.likesCount} message={p.post}/>);\n//\n//     const newPostElement = React.createRef();\n//     const onAddPost = () => {\n//         props.addPost();\n//     };\n//     let onPostChange = () => {\n//         let text = newPostElement.current.value;\n//         props.updateNewPostText(text);\n//     };\n//\n//     return (\n//         <div>\n//             <div className={s.postsBlock}>\n//                 <h3>My posts</h3>\n//                 <div>\n//                     <div><textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}/></div>\n//                     <div>\n//                         <button onClick={ onAddPost }>Add post</button>\n//                     </div>\n//                 </div>\n//             </div>\n//\n//             <div className={s.posts}>\n//                 {postElements}\n//             </div>\n//\n//         </div>\n//     )\n// };\n//\n//\n// export default MyPosts;\n\n\n","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = state =>{\n    return{\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n};\n\nlet mapDispatchToProps = dispatch =>{\n    return{\n        addPost: (post) =>{\n            dispatch(addPostActionCreator(post));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n    return(\n    <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n        <MyPostsContainer />\n    </div>\n\n    )\n};\n\nexport default  Profile;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Profile from './Profile';\nimport {getUserProfile, getUserStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n\n    };\n\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} update={this.props.updateStatus} />\n    }\n};\n//\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n\nlet mapStateToProps = state => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//\n//\n// export default connect(mapStateToProps, {getProfile})(WithUrlDataContainerComponent);\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\n    withRouter\n\n)\n(ProfileContainer);"],"sourceRoot":""}