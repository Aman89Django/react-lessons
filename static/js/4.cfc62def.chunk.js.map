{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","Field","placeholder","name","component","Input","type","Textarea","Object","keys","contacts","map","key","className","s","contact","formSummaryError","ProfileData","isOwner","gotToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","PreLoader","profileCard","src","photos","large","userAvatar","avatarLogo","target","files","length","initialValues","formData","then","Post","item","alt","message","like","maxLength10","maxLengthCreator","MyPosts","React","memo","postElements","posts","p","id","likesCount","post","postsBlock","AddNewPostFormRedux","values","addPost","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","update","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.cfc62def.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_background\":\"ProfileInfo_main_background__fGKF6\",\"profileCard\":\"ProfileInfo_profileCard__ehfd-\",\"avatarLogo\":\"ProfileInfo_avatarLogo__37kkx\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3Pphw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\"};","import React, {useEffect, useState} from \"react\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if(prevProps.status !== this.props.status) {\n    //         this.setState({\n    //             status: this.props.status\n    //         })\n    //     }\n    // }\n\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\n    return <div>\n        Status:\n        {!editMode ?\n            <div><span onDoubleClick={activateEditMode}>{status || 'NO status'}</span></div>\n            : <div><input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/></div>}\n    </div>\n\n\n};\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\nimport s from \"./ProfileInfo.module.css\";\n\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <button>Save</button>\n        </div>\n        <div><b>Full name:</b> <Field placeholder={\"Full name\"} name={\"fullName\"} component={Input}/></div>\n        <div><b>Looking for a Job:</b> <Field component={Input} name={\"lookingForAJob\"} type={\"checkbox\"}/></div>\n        <div><b>Looking for a Job Description:</b> <Field placeholder={\"My professional skills\"}\n                                                          name={\"lookingForAJobDescription\"} component={Textarea}/>\n        </div>\n        <div><b>About me: </b><Field placeholder={\"About Me\"} name={\"aboutMe\"} component={Textarea}/></div>\n        <div><b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n            return <div className={s.contact} key={key}><b>{key}:</b><Field component={Input} placeholder={key} name={\"contacts.\" + key}/>\n\n            </div>}\n            )}\n            <div className={s.formSummaryError}>{error}</div>\n        </div>\n\n\n\n\n    </form>\n};\n\n\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\n\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport PreLoader from \"../../Common/Preloader/PreLoader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userAvatar from '../../../assets/images/avatar_user.png';\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <PreLoader/>\n    }\n\n    const onPhotoSelected = e => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    };\n\n    const onSubmit = formData => {\n        saveProfile(formData).then(() => {\n                setEditMode(false);\n            }\n        )\n    }\n\n\n    return (\n        <div className={s.profileCard}>\n            <div>\n                <img src={profile.photos.large || userAvatar} className={s.avatarLogo}/>\n                {isOwner && <input type=\"file\" onChange={onPhotoSelected}/>}\n            </div>\n\n            {editMode\n                ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                : <ProfileData profile={profile}\n                               isOwner={isOwner}\n                               gotToEditMode={() => {\n                                   setEditMode(true)\n                               }}/>}\n\n\n            {/*{isOwner && <button onClick={() => { setEditMode(true) } }> Edit Profile</button>}*/}\n            {/*{editMode*/}\n            {/*? <ProfileDataForm profile={profile}/>*/}\n            {/*: <ProfileData profile={profile}/>}*/}\n\n\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, isOwner, gotToEditMode}) => {\n    return <div>\n        {isOwner && <div>\n            <button onClick={gotToEditMode}>Edit Profile</button>\n        </div>}\n        <div><b>Full name:</b> {profile.fullName}</div>\n        <div><b>About me: </b>{profile.aboutMe}</div>\n        <div><b>Looking for a Job:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}</div>\n        <div><b>Looking for a Job Description:</b> {profile.lookingForAJobDescription}</div>\n        <div><b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        })} </div>\n    </div>\n};\n\nexport const Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n\n\n    return(\n    <div className={s.item}>\n        <img src=\"https://www.trendsmap.com/ipx/https://pbs.twimg.com/profile_images/926488420645523456/hwKSfqNj.jpg\" alt=\"avatar\"/>\n\n        {props.message}\n        <div className={s.like}>Like: <span>{props.like}</span></div>\n        \n    </div>\n    )\n}\n\n\n\n\nexport default Post;\n\n\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\nimport {Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo(props => {\n    const postElements =\n        props.posts.map(p => <Post key={p.id} like={p.likesCount} message={p.post}/>);\n\n    const onAddPost = values=> {\n        props.addPost(values.post);\n    };\n\n\n    return (\n        <div>\n            <div className={s.postsBlock}>\n                <h3>My posts</h3>\n                <div>\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>\n                </div>\n            </div>\n\n            <div className={s.posts}>\n                {postElements}\n            </div>\n\n        </div>\n    )\n});\n\n\n\nconst AddNewPostForm = props => {\n    return (\n            <form onSubmit={props.handleSubmit}>\n                <div><Field name=\"post\" component={Textarea} placeholder=\"add a new post\" validate={[required, maxLength10]}/></div>\n                <div>\n                    <button>Add post</button>\n                </div>\n            </form>\n    )\n};\n\nconst AddNewPostFormRedux= reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\n\nexport default MyPosts;\n\n\n\n\n\n\n\n//\n// import React from 'react';\n// import s from './MyPosts.module.css';\n// import Post from \"./Post/Post\";\n//\n//\n// const MyPosts = (props) => {\n//     const postElements =\n//         props.posts.map(p => <Post like={p.likesCount} message={p.post}/>);\n//\n//     const newPostElement = React.createRef();\n//     const onAddPost = () => {\n//         props.addPost();\n//     };\n//     let onPostChange = () => {\n//         let text = newPostElement.current.value;\n//         props.updateNewPostText(text);\n//     };\n//\n//     return (\n//         <div>\n//             <div className={s.postsBlock}>\n//                 <h3>My posts</h3>\n//                 <div>\n//                     <div><textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}/></div>\n//                     <div>\n//                         <button onClick={ onAddPost }>Add post</button>\n//                     </div>\n//                 </div>\n//             </div>\n//\n//             <div className={s.posts}>\n//                 {postElements}\n//             </div>\n//\n//         </div>\n//     )\n// };\n//\n//\n// export default MyPosts;\n\n\n","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = state =>{\n    return{\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n};\n\nlet mapDispatchToProps = dispatch =>{\n    return{\n        addPost: (post) =>{\n            dispatch(addPostActionCreator(post));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\n\nconst Profile = (props) => {\n    return(\n    <div>\n        <ProfileInfo\n            isOwner={props.isOwner}\n            profile={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n            savePhoto={props.savePhoto}\n            saveProfile={props.saveProfile}/>\n        <MyPostsContainer />\n    </div>\n\n    )\n};\n\nexport default  Profile;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Profile from './Profile';\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n    };\n\n    componentDidMount() {\n        debugger;\n        this.refreshProfile();\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    };\n\n    render() {\n        return <Profile {...this.props}\n                        saveProfile={this.props.saveProfile}\n                        savePhoto={this.props.savePhoto}\n                        isOwner={!this.props.match.params.userId}\n                        profile={this.props.profile}\n                        status={this.props.status}\n                        update={this.props.updateStatus}/>\n    }\n};\n//\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n\nlet mapStateToProps = state => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//\n//\n// export default connect(mapStateToProps, {getProfile})(WithUrlDataContainerComponent);\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)\n(ProfileContainer);"],"sourceRoot":""}