{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","src","img","alt","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","Component","RedirectComponent","this","isAuth","React","connect","auth","dispatch","sendMessageCreator"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,iHCiBbC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIL,GAAM,yBAAKM,IAAKP,EAAMQ,IAAKC,IAAI,WAA5C,IAAwDT,EAAMU,KAA9D,O,kBCEGC,EAPC,SAACX,GACb,OACI,yBAAKG,UAAWC,IAAEQ,SAAUZ,EAAMY,U,kCCEpCC,EAAcC,YAAiB,IA4C/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAAAhB,GACnB,OACI,6BACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,uBACjG,6CAYDC,EA/CC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YACZC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,GAAIM,IAAKwB,EAAExB,SAC/F0B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAElC,GAAIU,QAASwB,EAAExB,aAUhF,OACI,yBAAKT,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAEiC,cACbR,GAEL,yBAAK1B,UAAWC,IAAE+B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAZX,SAAAoB,GAClBtC,EAAMuC,YAAYD,EAAOE,sB,uDCQlBC,uBCtBiB,SAACC,GAAc,IAErCC,EAFoC,uKAIlC,OAAIC,KAAK5C,MAAM6C,OAER,kBAACH,EAAcE,KAAK5C,OAFG,kBAAC,IAAD,CAAUM,GAAI,eAJV,GAEVwC,IAAMJ,WAe1C,OAFmCK,aAJA,SAAApB,GAAK,MAAI,CACxCkB,OAAQlB,EAAMqB,KAAKH,UAGYE,CAAoCJ,KDQnEI,aArBkB,SAAApB,GAClB,MAAO,CACHC,YAAaD,EAAMC,YACnBiB,OAAQlB,EAAMqB,KAAKH,WAKF,SAAAI,GACrB,MAAO,CACHV,YAAa,SAACC,GACVS,EAASC,YAAmBV,SASzBC,CAEdf","file":"static/js/3.5fdf66ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","import React from 'react';\nimport s from \"./DialogItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\n\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}><img src={props.img} alt=\"avatar\"/> {props.name} </NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;","import React from 'react';\nimport s from \"./Message.module.css\";\n\n\n\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\nimport {required, maxLengthCreator} from \"../../utils/validators/validators\";\n\n\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    const dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>);\n    const messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\n\n\n\n\n    const addNewMessage = values => {\n        props.sendMessage(values.newMessageBody)\n    };\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n\n\n            </div>\n\n        </div>\n    )\n};\n\n\nconst AddMessageForm = props => {\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/>\n                <button>Send</button>\n            </form>\n        </div>\n    )\n}\n\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n\n\n\n\nexport default Dialogs;\n\n\n// import React from 'react';\n// import s from './Dialogs.module.css';\n// import DialogItem from \"./DialogItem/DialogItem\";\n// import Message from \"./Message/Message\";\n// import {Redirect} from \"react-router-dom\";\n//\n//\n// const Dialogs = (props) => {\n//     let state = props.dialogsPage;\n//     const dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>);\n//     const messagesElements = state.messages.map(m => <Message key={m.id} message={m.message}/>);\n//\n//     const newMessageBody = state.newMessageBody;\n//\n//     const onSendMessageClick = () => {\n//        props.sendMessage();\n//     };\n//\n//     const onNewMessageChange = (e) => {\n//         let body = e.target.value;\n//         props.updateNewMessageBody(body);\n//     };\n//\n//\n//\n//     return (\n//         <div className={s.dialogs}>\n//             <div className={s.dialogsItems}>\n//                 {dialogsElements}\n//             </div>\n//             <div className={s.messages}>\n//                 <div>{messagesElements}</div>\n//\n//                 <div><textarea onChange={onNewMessageChange} value={newMessageBody}\n//                                placeholder='Enter your message'> </textarea></div>\n//                 <div>\n//                     <button onClick={onSendMessageClick}>Send </button>\n//                 </div>\n//\n//\n//             </div>\n//\n//         </div>\n//     )\n// };\n//\n// export default Dialogs;\n","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\n\nlet mapStateToProps = state =>{\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth,\n\n    }\n};\n\nlet mapDispatchToProps = dispatch =>{\n    return {\n        sendMessage: (newMessageBody) =>{\n            dispatch(sendMessageCreator(newMessageBody))\n        },\n    }\n};\n\n\n\n\n\nexport default compose( withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps))\n(Dialogs);","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\n\n\n\nexport const withAuthRedirect = (Component) =>{\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\n\n            return <Component {...this.props}/>\n\n        }\n    }\n\nconst mapStateToPropsForRedirect = state =>({\n    isAuth: state.auth.isAuth\n});\n\nlet ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\nreturn ConnectAuthRedirectComponent;\n\n\n\n};\n\n\n"],"sourceRoot":""}